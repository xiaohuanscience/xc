   注意：如果+的任何一个操作数为字符串的话，另一个操作数就也会被转变为字符串。
 
   这个+操作符是从左到右执行的。如果在字符串之前，有两个数值的+操作，那么前面的两个数值就会首先被累加，然后才会被转换成一个字符串，并与最后的那个字符串进行拼接

   字符串拼接和转换只是二元加号操作符+的一个特性。其他的数学操作符没有类似的特性，它们只能执行数学操作。

   ++在语句前后有不同效果，优先级大于其他计算；若a=1，++a=2 a++=1

   let n = 2;
   n += 5; // now n = 7 (same as n = n + 5)
   n *= 2; // now n = 14 (same as n = n * 2)

   ||(OR，或)
         逻辑”OR“寻找第一个 truthy 值
         从左到右执行操作数。
         对于每一个操作数，转换其为 boolean。如果结果为 true，执行结束并返回该操作数的原始值。
         如果所有其他的操作数都被跳过(全为false)，就直接返回最后一个操作数。
         判定从左到右
         
   &&(AND，与)
      alert( true && true );   // true
      alert( false && true );  // false
      alert( true && false );  // false
      alert( false && false ); // false
      从左到右执行操作数。
      对于每一个操作数，转换其为 boolean。如果结果为 false，执行结束并返回该操作数的原始值。
      如果所有其他的操作数都被跳过(全为true)，就直接返回最后一个操作数。
     
      逻辑”AND“的优先级高于逻辑”OR“